name: 'Install Helm releases'
description: 'Deploy a service using Warestack and Helm package manager'
inputs:
  release_name:
    description: 'Release name to be used for the helm releases and Container Repository'
    required: true
  namespace:
    description: 'The organization to be used for the namespace in helm install'
    required: true
  image_uri:
    description: 'URI of the Docker image in the container registry. Helm will use this to pull the image.'
    required: true
  image_tag:
    description: 'Specific tag of the Docker image to be deployed. Allows for precise version control.'
    required: true
  public_url:
    description: 'Public URL to used for exposing the service'
    required: true
  port:
    description: 'Port to used for exposing the pod in Kube'
    required: true
  helm_path:
    description: 'Path to the Helm chart'
    required: true

runs:
  using: "composite"
  steps:
    # Install or Upgrade the Helm release
    - name: Install or upgrade helm release
      env:
        RELEASE_NAME: ${{ inputs.release_name }}
        NAMESPACE: ${{ inputs.namespace }}
        IMAGE_URI: ${{ inputs.image_uri }}
        IMAGE_TAG: ${{ inputs.image_tag }}
        PUBLIC_URL: ${{ inputs.public_url }}
        PORT: ${{ inputs.port }}
        HELM_PATH: ${{ inputs.helm_path }}
      run: |-
        helm upgrade ${{ env.RELEASE_NAME }} ${{ env.HELM_PATH }} --namespace ${{ env.NAMESPACE }} --create-namespace --wait \
          --values ${{ env.HELM_PATH }}/values.yaml \
          --set image.repository=${{ env.IMAGE_URI }} \
          --set image.tag=${{ env.IMAGE_TAG }} \
          --set cert.tls.secretName=$RELEASE_NAME \
          --set cert.commonName=$PUBLIC_URL \
          --set cert.dnsNames.hosts={$PUBLIC_URL} \
          --set service.port=$PORT \
          --set ingress.hosts[0].host=$PUBLIC_URL \
          --set ingress.tls[0].secretName=$RELEASE_NAME \
          --set ingress.tls[0].hosts={$PUBLIC_URL} \
          --install
      shell: bash
